language: android   # 声明构建语言环境
# dist: trusty

notifications:
# 每次构建的时候是否通知，如果不想收到通知邮箱，那就设置 false 吧
  # email: false
  email:
    on_failure: always # default: always


branches:
  only:
    master

sudo: false         # sudo 权限

android:            # 配置信息
  components:
    - platform-tools
    - tools
    - build-tools-28.0.3              
    - android-28             
    - extra-android-m2repository     # Android Support Repository
    # - extra-google-m2repository
    - extra-android-support          # Support Library

before_cache:
 - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
 - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
 directories:
 - ktx-androidx/build/javadoc
#  - $HOME/.gradle/caches/
#  - $HOME/.gradle/wrapper/

script:              # 执行:下面的命令
  - chmod +x gradlew  # 改变 gradlew 的访问权限
  - ./gradlew install 

deploy:              # 部署
  provider: pages # 部署到 GitHub Release，除此之外，Travis CI 还支持发布到 fir.im、AWS、Google App Engine 等
  api_key:           # 填写 GitHub 的 token （Settings -> Personal access tokens -> Generate new token）
    secure: ${GITHUB_TOKEN}
# 通配符
  # file_glob: true
# 部署文件路径
  # file:
    # - app/build/outputs/apk/release/*.apk
    # - ktx*/build/libs/*.jar
    # - ktx*/build/outputs/aar/*.aar

  local-dir: ./ktx-androidx/build/javadoc/ ## 根据情况自定义到静态文件输出目录
  skip_cleanup: true     # 设置为 true 以跳过清理,不然 apk 文件就会被清理
  target-branch: gh-pages
  verbose: true
  on:     # 发布时机           
    tags: true       # tags 设置为 true 表示只有在有 tag 的情况下才部署
    branches:
      only:
        master